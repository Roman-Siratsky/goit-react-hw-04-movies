{"version":3,"sources":["components/Movies.jsx","styles.js","components/apiKey.js","components/MovieList.jsx"],"names":["Movies","state","results","query","page","onInputChange","e","value","currentTarget","setState","OnMoviesSearch","preventDefault","axios","get","apiKey","then","res","data","window","this","className","htmlFor","autoFocus","color","onChange","placeholder","variant","onClick","type","Component","withRouter","useStyles","makeStyles","theme","container","backgroundColor","palette","background","paper","padding","spacing","listStyleType","cardGrid","card","height","display","flexDirection","cardContent","flexGrow","cardMedia","paddingTop","location","classes","maxWidth","justify","map","result","item","xs","sm","md","lg","to","pathname","id","from","image","poster_path","title","gutterBottom","overview","slice"],"mappings":"qQASMA,E,4MAEFC,MAAQ,CACJC,QAAS,GACTC,MAAO,GACPC,KAAM,G,EAGVC,cAAgB,SAACC,GAAO,IACbC,EAASD,EAAEE,cAAXD,MACP,EAAKE,SAAS,CAACN,MAAOI,K,EAI1BG,eAAiB,SAACJ,GAAO,IAAD,EACE,EAAKL,MAApBE,EADa,EACbA,MAAOC,EADM,EACNA,KACdE,EAAEK,iBACFC,IAAMC,IAAN,6DAAgEC,IAAhE,kBAAgFX,EAAhF,iBAA8FC,IAC7FW,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAKf,WAASa,MAAK,SAACb,GACjC,EAAKO,SAAS,CAACP,QAAQ,YAAKA,S,4CAIpC,WAEI,OADAgB,OAAOjB,MAAQkB,KAAKlB,MAEhB,sBAAKmB,UAAU,iBAAf,UACA,uBAAMA,UAAU,aAAhB,UACI,uBAAOA,UAAU,cAAcC,QAAQ,GAAvC,SACI,cAAC,IAAD,CACID,UAAU,QACVE,WAAW,EACXC,MAAM,eACNhB,MAAOY,KAAKlB,MAAME,MAClBqB,SAAUL,KAAKd,cACfoB,YAAY,4BAGpB,cAAC,IAAD,CAAQC,QAAQ,YAAYH,MAAM,UAAUI,QAASR,KAAKT,eAAgBkB,KAAK,SAA/E,uBAEJ,cAAC,IAAD,CAAW1B,QAASiB,KAAKlB,MAAMC,iB,GAxCtB2B,aA6CNC,sBAAW9B,I,gCCtD1B,aAGM+B,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,UAAW,CACPC,gBAAiBF,EAAMG,QAAQC,WAAWC,MAC1CC,QAASN,EAAMO,QAAQ,EAAG,EAAG,GAC7BC,cAAe,QAEnBC,SAAU,CACNH,QAAS,UAEbI,KAAM,CACFC,OAAQ,OACRC,QAAS,OACTC,cAAe,UAEnBC,YAAa,CACTC,SAAU,GAEdC,UAAW,CACPC,WAAY,SACZN,OAAQ,WAIDb,O,gCC1Bf,kCAAO,IAAMjB,EAAS,oC,gCCAtB,4FAwCegB,iBAnCG,SAAC,GAAyB,IAAxB5B,EAAuB,EAAvBA,QAASiD,EAAc,EAAdA,SACnBC,EAAUrB,cAChB,OACY,cAAC,IAAD,CAAWX,UAAWgC,EAAQV,SAAUW,SAAS,KAAjD,SACI,cAAC,IAAD,CAAMnB,WAAS,EAACM,QAAS,EAAGc,QAAQ,SAApC,SACKpD,EAAQqD,KAAI,SAAAC,GAAM,OAAI,cAAC,IAAD,CAAMC,MAAI,EAAiBC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAArD,SACnB,cAAC,IAAD,CAASzC,UAAU,aAAa0C,GAAI,CAC5BC,SAAS,WAAD,OAAaP,EAAOQ,IAC5B/D,MAAO,CACHgE,KAAMd,IAHlB,SAMI,eAAC,IAAD,CAAM/B,UAAWgC,EAAQT,KAAzB,UACA,cAAC,IAAD,CACIvB,UAAWgC,EAAQH,UACnBiB,MAAK,0CAAqCV,EAAOW,aACjDC,MAAM,KAEV,eAAC,IAAD,CAAahD,UAAWgC,EAAQL,YAAhC,UACI,cAAC,IAAD,CAAYsB,cAAY,EAAC3C,QAAQ,KAAjC,SACK8B,EAAOY,QAEZ,cAAC,IAAD,CAAY1C,QAAQ,YAApB,SACK8B,EAAOc,SAASC,MAAM,EAAG,IAAM,iBAlBTf,EAAOQ","file":"static/js/movies.be798c07.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport React, { Component } from \"react\";\r\nimport { withRouter} from 'react-router-dom'\r\nimport MovieList from './MovieList';\r\nimport { Input } from '@material-ui/core';\r\nimport { Button } from '@material-ui/core';\r\nimport {apiKey} from './apiKey'\r\n\r\n\r\nclass Movies extends Component {\r\n    \r\n    state = {\r\n        results: [],\r\n        query: '',\r\n        page: 1\r\n    }\r\n\r\n    onInputChange = (e) => {\r\n        const {value} = e.currentTarget;\r\n        this.setState({query: value})\r\n    }\r\n\r\n\r\n    OnMoviesSearch = (e) => {\r\n        const {query, page} = this.state\r\n        e.preventDefault()\r\n        axios.get(`https://api.themoviedb.org/3/search/movie/?api_key=${apiKey}&query=${query}&page=${page}`)\r\n        .then(res => res.data.results).then((results) => {\r\n            this.setState({results: [...results]})\r\n        })\r\n    }\r\n\r\n    render() {\r\n        window.state = this.state\r\n        return(\r\n            <div className='search-wrapper'>\r\n            <form className='movie-form'>\r\n                <label className='input-label' htmlFor=\"\">\r\n                    <Input\r\n                        className='input'\r\n                        autoFocus={true}\r\n                        color='primaryColor'\r\n                        value={this.state.query}\r\n                        onChange={this.onInputChange}\r\n                        placeholder='type movie title here'\r\n                    />\r\n                </label>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={this.OnMoviesSearch} type='submit'>Search</Button>\r\n            </form>\r\n            <MovieList results={this.state.results}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default withRouter(Movies);","import {makeStyles} from '@material-ui/core/styles'\r\n// import NonFoundPage from './components/NonFoundPage';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        padding: theme.spacing(8, 0, 6),\r\n        listStyleType: 'none',\r\n    },\r\n    cardGrid: {\r\n        padding: '20px 0'\r\n    },\r\n    card: {\r\n        height: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    },\r\n    cardContent: {\r\n        flexGrow: 1,\r\n    },\r\n    cardMedia: {\r\n        paddingTop: '86.30%',\r\n        height: '60%',\r\n    }\r\n}))\r\n\r\nexport default useStyles;","export const apiKey = 'c8971b346877ee4bba0d277ad44911fe'","import React from 'react'\r\nimport {NavLink, withRouter} from 'react-router-dom'\r\nimport {Grid, Typography, Container, CardMedia, CardContent, Card} from '@material-ui/core'\r\nimport useStyles from '../styles'\r\n\r\nconst MovieList = ({results, location}) => {\r\n    const classes = useStyles()\r\n    return(\r\n                <Container className={classes.cardGrid} maxWidth='md'>\r\n                    <Grid container spacing={4} justify=\"center\">\r\n                        {results.map(result => <Grid item key={result.id} xs={12} sm={6} md={4} lg={3}>\r\n                            <NavLink className='movie-link' to={{\r\n                                    pathname: `/movies/${result.id}`,\r\n                                    state: {\r\n                                        from: location\r\n                                    }\r\n                                }}>\r\n                                <Card className={classes.card}>\r\n                                <CardMedia\r\n                                    className={classes.cardMedia}\r\n                                    image={`https://image.tmdb.org/t/p/w300/${result.poster_path}`}\r\n                                    title=''\r\n                                />\r\n                                <CardContent className={classes.cardContent}>\r\n                                    <Typography gutterBottom variant='h6'>\r\n                                        {result.title}\r\n                                    </Typography>\r\n                                    <Typography variant='subtitle1'>\r\n                                        {result.overview.slice(0, 60) + '...'}\r\n                                    </Typography>\r\n                                </CardContent>\r\n                                </Card>\r\n                                </NavLink>\r\n                            </Grid>\r\n                        )}\r\n                    </Grid>\r\n                </Container>\r\n    )\r\n}\r\n\r\nexport default withRouter(MovieList);"],"sourceRoot":""}